;= montereySync.edn .005  ======================================================
;* CHANGELOG =====================================================
	;; trying to replace impremissable characters... not sure why...&

{ ;========================= DEFINITIONS ============================
	:templates { ;..........................................................................................................................
		:alf "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"\"'"
		:km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
		:btt "osascript -e 'tell application \"BetterTouchTool\" to  trigger_named \"%s\"'"
		:open "open \"%s\""
		:wait "sleep 250"
		:type "osascript -e 'tell application \"System Events\" to keystroke \"%s\"'" ; send keystroke
				:escp "osascript -e 'tell application \"System Events\" to key code 53' " ; send escape
				:sendq "osascript -e 'tell application \"System Events\" to keystroke \"q\"'" ; send keystroke
				:sendreturn "osascript -e 'tell application \"System Events\" to keystroke return' " ; send escape
				:sendspace "osascript -e 'tell application \"System Events\" to keystroke space' " ; send keystroke
				:sendesc "osascript -e 'tell application \"System Events\" to keystroke tab' " ; send keystroke
		;* Sounds and Audio Feedback SPKR1SPKR2SPKR3SPKR0🔔📣📢🎵💥
				:SPKR3 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrawerOpening.aiff"
				:SPKR2 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrawerClosing.aiff"
				:SPKR1 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillOut.aiff"
				:SPKR0 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillIn.aiff"
				:Focus2 "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/Focus2.aiff"
				:beep "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/WindowActivated.aiff"
				:Morse "afplay /System/Library/Sounds/Morse.aiff"
				:Pop "afplay /System/Library/Sounds/Pop.aiff"
				:tink "afplay /System/Library/Sounds/Tink.aiff"
				:soundOn "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillOut.aiff"
				:soundOff "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/DrillIn.aiff"
			}
	:layers { ;=...............................................................................................................................
		; :tab-mode {:key :tab}
		:space-mode {:key :spacebar :condi [:!f& :!d& :!c& :!k& :!w& :!Rctrl-mode :!LCMD]} ;prevents space mode from overiding F and D modes
		:Rctrl-mode {:key :right_control :alone {:key :spacebar} :condi [:!f& :!d& :!c& :!k& :!w& :!space-mode]} ; :Rctrl-mode {:key :right_control :condi [:!f& :!d& :!c& :!k& :!w&]}
		:numpad-mode {:key :f20} ;? defined in layers and given symbolic key never used so can be triggered via setting variable in space mode
		:numrow-mode {:key :f20}
		:symrow-mode {:key :f20}
		}
	:simlayers { ;=..........................................................................................................................
		;! :semicolon-mode {:key :semicolon} :! taken out for semicolon
		:slash& {:key :slash}
		:a& {:key :a}
		:b& {:key :b}
		:c& {:key :c}
		:d& {:key :d :condi :!space-mode} ;why is this here?
		:e& {:key :e}
		:f& {:key :f}
		:g& {:key :g}
		:h& {:key :h}
		:i& {:key :i}
		:j& {:key :j}
		:k& {:key :k}
		:l& {:key :l}
		:m& {:key :m}
		:n& {:key :n}
		:o& {:key :o}
		:p& {:key :p}
		:q& {:key :q}
		:r& {:key :r}
		:s& {:key :s}
		:t& {:key :t}
		:u& {:key :u}
		:v& {:key :v}
		:w& {:key :w}
		:x& {:key :x}
		:y& {:key :y}
		:z& {:key :z}
		:period& {:key :period}
		:return& {:key :return_or_enter}
		:quote& {:key :quote}
		; :tab& {:key :tab}
		}
;+ ===============================================================
:main [  ; ============================= MAIN ========================
;+ ===============================================================
;============================ HOLDINGKEY =========================
		{:des "Holding Keys: ⌘V for Clipboard History, ⇧⌘3 for Screenshot Palette, ⇧⌘4 for Snagit" :rules [
			[:!Cv nil nil {:alone :!Cv :held [:km "Clipboard History"] :repeat false :halt true :params{:alone 150 :held 150}} ] ; default :alone is 500ms and would be too long
			[:!SC3 nil nil {:alone :!SC3 :held [:km "-Screenshot Palette"] :repeat false :halt true :params{:alone 150 :held 150}} ]
			[:!SC4 nil nil {:alone :!SC4 :held [:km "-Snagit Palette"] :repeat false :halt true :params{:alone 150 :held 150}} ]
			]}
;======================== TAP and DOUBLEPRESS  =====================
	;; C T O S and Q W E R
		{:des "DOUBLE PRESS: ⌘q² to quit,  " :rules[ ;* Double Press Command Q to Quit
			[:!C#Pq [ :!Cq ["⌘q" 0]] ["⌘q" 1]] 		;? when ⌘q is pressed the first time  > variable is set to 1 and nothing is sent
			[:!C#Pq ["⌘q" 1] nil {:delayed {:invoked ["⌘q" 0] :canceled ["⌘q" 0]}}] ;? when pressed the second time send ⌘Q
			]}
		{:des "Double Press Special" :rules [[:condi :!f& :!d& :!c& :!k& :!w& :!Rctrl-mode]
				; * Double Press Left Command
						; [:left_gui [[:SPKR2] :!!f14 ["LCMD" 0]] ["LCMD" 1]]
						; [:left_gui :left_gui nil {:alone [[:SPKR3]["LCMD" 1 ]]:delayed {:invoked ["LCMD" 0] :canceled ["LCMD" 0]}}]
				;* Double Press Right Command for Moom (via f14)
					; [:right_gui [[:SPKR2] :!!f14 ["R⌘" 0]] ["R⌘" 1]] ;! had to get rid of to keep numpad mode working..
					; [:right_gui :right_gui nil {:alone [[:SPKR3]:right_gui["R⌘" 1 ]]:delayed {:invoked ["R⌘" 0] :canceled ["R⌘" 0]}}]
						; [:right_gui [[:SPKR2] :!!f14 ["R⌘" 0]] ["R⌘" 1]]
						; [:right_gui :right_gui nil {:alone [[:SPKR3]:!!f14["R⌘" 1 ]]:delayed {:invoked ["R⌘" 0] :canceled ["R⌘" 0]}}]

			]}
	{:des "Modifier+Spacebar Stuff" :rules[
		[:!Cspacebar [[:SPKR3] :!Ospacebar  ["LCMDspacebar" 0]] ["LCMDspacebar" 1]] ;* Double Press Command Spacebar for something...
			[:!Cspacebar :!Cspacebar nil {:alone ["LCMDspacebar" 1] :delayed{:invoked ["LCMDspacebar" 0] :canceled ["LCMDspacebar" 0]}} ]
		[:!COspacebar [[:SPKR3] :!COspacebar  ["LCMD⌥␣" 0]] ["LCMD⌥␣" 1]] ;* LCMD⌥␣ spacebar
			[:!COspacebar :!COspacebar nil {:alone ["LCMD⌥␣" 1] :delayed{:invoked ["LCMD⌥␣" 0] :canceled ["LCMD⌥␣" 0]}} ]
		;* modifier+spacebar bug work around...
			[:!Ospacebar :!Ospacebar] [:!COTspacebar :!COTspacebar] [:!COSspacebar :!COSspacebar] [:!COTSspacebar :!COTSspacebar]
		]}
;========================  MODIFIERS and COMMAND MODES ==============================

		{:des "Shift Space for underscore and dash, Left to Right Modifers...":rules[
			[:!Rright_control :hyphen] [:!Rspacebar :hyphen] ;* Right Shift +Spacebar (or mod) for underscore
			[:!Sright_control :!Shyphen] [:!Sspacebar :!Shyphen]  ;*Left Shift+Spacebar (or mod) for dash
			; [:!OSspacebar [[:SPKR3]:!SOspacebar  ]]  ;*Left Shift+Spacebar (or mod) for dash
			; [:!Sright_shift [:SPKR3]] [:!Rleft_shift [:SPKR3]] ;* ⭕️ Left  Shift to Right Shift
			; [:!Sright_gui [:SPKR3]] [:!Rleft_gui [:SPKR3]] ;* ⭕️ Left Shift to Right Command and Right Shift to Left Command
			]}

			 {:des "Command Modes...":rules[
				;* hold and double press space verison
			 	;*Left Command to Right Command for home row number mode
				; [:!Cright_gui [[:soundOff] ["numrow-mode" 0]] ["numrow-mode" 1]]
				;*(R)⌘+(L)⌘ for Number Mode
						[:!Qleft_gui nil nil {:alone [[:SPKR0] ["numpad-mode" 0]]
						:held [[:SPKR1] ["numpad-mode" 1]] :afterup [[:SPKR0] ["numpad-mode" 0]]
						:repeat false :halt false :params{:alone 150 :held 150}} ]
				;*(L)⌘ +(R) ⌘ for Symbol Home Row Mode
						[:!Cright_gui nil nil {:alone [[:SPKR0] ["symrow-mode" 0]]
						:held [[:SPKR1] ["symrow-mode" 1]] :afterup [[:SPKR0] ["symrow-mode" 0]]
						:repeat false :halt false :params{:alone 150 :held 150}} ]
					;* switch version
						; [:!Cright_gui [[:soundOff] ["numrow-mode" 0]] ["numrow-mode" 1]]
						; [:!Cright_gui [[:soundOn] ["numrow-mode" 1]]]
					;* old one not triggering a mode
						; [:!Cright_gui [[:soundOn] ["numrow-mode" 1]] nil
						; {:alone ["numrow-mode" 1] :afterup ["numrow-mode" 0] }]
			]}

		;* Single Press modifier ;❗ breaks numpad mode
	  	; {:des   "Change right_command to command-tab when used alone"j
                      ;  :rules [[:right_command :right_command nil {:alone [:!Ctab]}]
                              ;  ]}1
;======================== SIMULTANEOUS KEY ========================
	{:des "Simultaneous Keys":rules [
		[ [:k :m] [ [:km "Activate Keyboard Maestro"]] ] ;* km to activate Keyboard Maestro
		[ [:v :c]  [:km "Activate Visual Studio Code"] ] ;* vc to Activate Visual Studio Code
		; [ [:n :m]  [:km "Activate Messages"] ] ;* nm to Activate Messages ;! go to active message...
		;* Fn testing
			[ [:1 :2 ] [[:SPKR3] :f13] ]
			[ [:1 :4 ] [[:SPKR3] :!Cf13] ]
			[ [:1 :5 ] [[:SPKR3] :!SCf13] ]
			[ [:1 :6 ] [[:SPKR3] :!SCTf13] ]
			[ [:1 :7 ] [[:SPKR3] :!SCOTf13] ]
		]}
;======================= HYPER MODE and MODIFIERS ======================
	{:des "Capslock as hyper" :rules [ [:condi :!space-mode :!Rctrl-mode]
		[:##caps_lock :!!left_control nil {:alone :escape} ] ]}
	{:des "Semicolon as fn" :rules [ [:condi :!space-mode :!Rctrl-mode] ;* Semicolon as FN for Contexts jump to
			[:##semicolon :##fn nil {:alone :semicolon}]
			; [:##Fspacebar [:km "Trigger Macro by Name"]]
		]}
	{:des "FN from UHK" :rules [[:#SOCTf24 :fn [:uhk-keyboard] ]]} ;* UHK FN as mac fn via UHK hardcoded f24 > fn in KE but only for uhk
	{:des "Tab as capslock" :rules [ [:condi :!space-mode :!Rctrl-mode :!f&] ;! got it to stop sending fn
		[:##tab :fn nil {:alone :tab} ] ] }

	;! return mode broken because pushing enter send control not lazy like non modifier mode
			;* 💡 idea to include (l)⌘_space tap and holding
			; {:des "return_or_enter" :rules [
			; [:##return_or_enter :left_control nil {:alone :return_or_enter} ]] }
			; {:des "return_or_enter" :rules [[:##return_or_enter :left_control nil {:lazy true :alone :return_or_enter} ]] }
			; {:des "return_or_enter" :rules [[:##return_or_enter :left_control nil {:key:lazy true :alone :return_or_enter} ]] }
			; {:des "left+right command for numpad" :rules [[:!Cright_gui  :left_control nil {:alone :return_or_enter} ]] } ; numpad mode
;=========================== SPACE MODE ==========================
	{:des "spacebar mode" :rules [ ;? set up not to conflict with numpad-mode
		;* keyboard navigation
			[:##b :spacebar :space-mode]
			[:##j :left_arrow :space-mode] ;* cursor navigation
			[:##l :right_arrow :space-mode]
			[:##i :up_arrow :space-mode]
			[:##k :down_arrow :space-mode]
			[:##semicolon :return_or_enter :space-mode] ;* non-text characters
			[:##u :!Stab :space-mode]
			[:##o :tab :space-mode]
			[:##p :delete_or_backspace :space-mode]
			[:##y :page_up :space-mode]
			[:##h :page_down :space-mode]
			[:##s :left_shift :space-mode] ;* modifiers
			[:##f :right_command :space-mode]
			[:##a :left_control :space-mode]
			[:##d :left_option :space-mode]
			[:##caps_lock :fn :space-mode]
		;* MISC for other functions (backtick/capslock for escape, b for spacebar and w for moom)
				[:##w [[:SPKR3]:!!f14] :space-mode] [:##w [[:SPKR2]:!!f14] :Rctrl-mode] ;• spacebar+w activate moom probably (depricated for m so contexts could have w...)
				[:##m [[:SPKR3]:!!f14] :space-mode] [:##m [[:SPKR2]:!!f14] :Rctrl-mode] ;• spacebar+m activate moom
				[:##c [[:SPKR3]:!Ospacebar] :space-mode] [:##c [[:SPKR2]:!Ospacebar] :Rctrl-mode] ;• spacebar+c to activate Contexts
				[:##tab [[:SPKR3]:!Otab] :space-mode] [:##tab [[:SPKR2]:!Otab] :Rctrl-mode] ;• spacebar+tab for contexts tab switch
				[:##slash [[:SPKR3]:!Oescape] :space-mode]  ;• spacebar+slash for to Focus help menu via ⇧⌘/
				[:##right_shift [[:SPKR3]:!Cf12] :space-mode]  ;• spacebar+Right Shift for Bartender Keyboard Navigate (via ⌘F12 in Bartender)
				[:##return_or_enter [[:SPKR3]:!Of12] :space-mode]  ;• spacebar+Enter for Bartender Search menu bar items (via ⌘F12 in Bartender)
				; [:##grave_accent_and_tilde :escape :space-mode] ;? Unused
		;* as Shift
			[:##q :grave_accent_and_tilde [:space-mode :!numpad-mode]] ;? just added
			[:##e :!Sgrave_accent_and_tilde [:space-mode :!numpad-mode]] ;?
			[:##period :!Speriod [:space-mode :!numpad-mode]]
			[:##comma :!Scomma [:space-mode :!numpad-mode]]
			[:##quote :!Squote [:space-mode :!numpad-mode]]
			[:##open_bracket :!Sopen_bracket [:space-mode :!numpad-mode]]
			[:##close_bracket :!Sclose_bracket [:space-mode :!numpad-mode]]
			[:##equal_sign :!Sequal_sign [:space-mode :!numpad-mode]]
			[:##hyphen :!Shyphen [:space-mode :!numpad-mode]]
			[:##1 :!S1 [:space-mode  :!numpad-mode]] [:##1 :!S1 [:Rctrl-mode  :!numpad-mode]]
			[:##2 :!S2 [:space-mode :!numpad-mode]] [:##2 :!S2 [:Rctrl-mode :!numpad-mode]]
			[:##3 :!S3 [:space-mode :!numpad-mode]] [:##3 :!S3 [:Rctrl-mode :!numpad-mode]]
			[:##4 :!S4 [:space-mode :!numpad-mode]] [:##4 :!S4 [:Rctrl-mode :!numpad-mode]]
			[:##5 :!S5 [:space-mode :!numpad-mode]] [:##5 :!S5 [:Rctrl-mode :!numpad-mode]]
			[:##6 :!S6 [:space-mode :!numpad-mode]] [:##6 :!S6 [:Rctrl-mode :!numpad-mode]]
			[:##7 :!S7 [:space-mode :!numpad-mode]] [:##7 :!S7 [:Rctrl-mode :!numpad-mode]]
			[:##8 :!S8 [:space-mode :!numpad-mode]] [:##8 :!S8 [:Rctrl-mode :!numpad-mode]]
			[:##9 :!S9 [:space-mode :!numpad-mode]] [:##9 :!S9 [:Rctrl-mode :!numpad-mode]]
			[:##0 :!S0 [:space-mode :!numpad-mode]] [:##0 :!S0 [:Rctrl-mode :!numpad-mode]]
			;* Numpad Mode (activates numpad-mode layer )
				[:right_gui ["numpad-mode" 1] :space-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}]
				[:right_gui [[:SPKR3]["numpad-mode" 1]] :Rctrl-mode {:alone ["numpad-mode" 1] :afterup [[:SPKR2]["numpad-mode" 0] ]}]
				[:right_control [[:SPKR3]["numpad-mode" 1]] :space-mode {:alone ["numpad-mode" 1] :afterup [[:SPKR2]["numpad-mode" 0]]}] ;
				[:spacebar ["numpad-mode" 1] :Rctrl-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}]
				; [:tab ["numpad-mode" 1] :space-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}]
				; [:right_gui [ :SPKR3 :set["numpad-mode" 1]] :space-mode ] ;!
				; [:right_gui ["numpad-mode" 1] nil {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}];!
		]}
;=========================  NUMBER MODES =========================
	{:des "Numpad Mode" :rules [
			[:!Cspacebar :spacebar :numpad-mode] [:spacebar :spacebar :numpad-mode]
			[:right_gui :0 :numpad-mode]
			[:m :0 :numpad-mode]
			[:j :1 :numpad-mode]
			[:k :2 :numpad-mode]
			[:l :3 :numpad-mode]
			[:u :4 :numpad-mode]
			[:i :5 :numpad-mode]
			[:o :6 :numpad-mode]
			[:7 :7 :numpad-mode]
			[:8 :8 :numpad-mode]
			[:9 :9 :numpad-mode]
			[:p :!Sequal_sign :numpad-mode]
			[:0 :hyphen :numpad-mode] [:s :hyphen :numpad-mode] ;* s for subtract
			[:slash :slash :numpad-mode] [:d :slash :numpad-mode] ;* d for divide
			[:t :!S8 :numpad-mode] ;*t for times
			[:period :period :numpad-mode]
			[:semicolon :return_or_enter :numpad-mode]
			[:right_control :spacebar :numpad-mode]
			[:spacebar :spacebar :numpad-mode]
	]}
	{:des "Homerow Number and symbol Mode" :rules [
			[:!Ca :1 :numrow-mode] [:a :1 :numrow-mode]
			[:a :!S1 :symrow-mode]
			[:!Cs :2 :numrow-mode] [:s :2 :numrow-mode]
			[:s :!S2 :symrow-mode]
			[:!Cd :3 :numrow-mode] [:d :3 :numrow-mode]
			[:d :!S3 :symrow-mode]
			[:!Cf :4 :numrow-mode] [:f :4 :numrow-mode]
			[:f :!S4 :symrow-mode]
			[:!Cg :5 :numrow-mode] [:g :5 :numrow-mode]
			[:g :!S5 :symrow-mode]
			[:!Ch :6 :numrow-mode] [:h :6 :numrow-mode]
			[:h :!S6 :symrow-mode]
			[:!Cj :7 :numrow-mode] [:j :7 :numrow-mode]
			[:j :!S7 :symrow-mode]
			[:!Ck :8 :numrow-mode] [:k :8 :numrow-mode]
			[:k :!S8 :symrow-mode]
			[:!Cl :9 :numrow-mode] [:l :9 :numrow-mode]
			[:l :!S9 :symrow-mode]
			; [:!Csemicolon :0 :numrow-mode] [:semicolon :0 :numrow-mode]
			[:semicolon :!S0 :symrow-mode]
			; [:!Csemicolon :return_or_enter :numrow-mode] [:semicolon :return_or_enter :numrow-mode] ;? don't know why this is here
 			[:!Cp :!S!Sequal_sign :numrow-mode] [:p :!Sequal_sign :numrow-mode]
			[:m :hyphen :numrow-mode] [:o :!S8 :numrow-mode] [:i :slash :numrow-mode]
				[:p :delete_or_backspace :symrow-mode]
			 [:!Cperiod :period :numrow-mode] [:period :period :numrow-mode]
			[:!Cslash :slash :numrow-mode] [:slash :slash :numrow-mode]

			; [:!Cspacebar :spacebar :numrow-mode] [:spacebar :spacebar :numrow-mode]
			; [:!Cright_control :spacebar :numrow-mode] [:right_control :spacebar :numrow-mode]
	]}
;============================ MOUSEPAD MODE ======================
	{:des "mousepad-mode for a mouse things" :rules [
	; should only work with mouse
			[:!CTkeypad_7 [[:SPKR3] :!STOcomma]] ;• ⌤⊼7 for  Switch Space Left
			[:!CTkeypad_9 [[:SPKR3] :!STOperiod]] ;• ⌤⊼9 for  Switch Space Left
			[:!CTOkeypad_7 [[:SPKR3] [:btt "Move Window Space Left"]]] ;• ⌤⊼⊻7 for Move Window Space Left
			[:!CTOkeypad_9 [[:SPKR3] [:btt "Move Window Space Right"]]] ;• ⌤⊼⊻9 for Move Window Space Right

	]}
;============================ A MODE =============================
	{:des "a-mode for a things" :rules [
		;+ a+k+k.............................................................................................................................
			[:k :!CTSt [["a&" 1] ["ak&" 1]]] ;+ a+k+k for Auto-complete
		;+ a+m+..............................................................................................................................
			[:m [:km "km macro 1"] [["a&" 1] ["am&" 1]]] ;+ a+m+m for km macro 1
			[:p [:km "Activate Amphetamine"] [["a&" 1] ["am&" 1]]] ;+ a+m+p for Activate Amphetamine
	:a& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* a+k for Autocompletion
				[:k [[:SPKR3] :!Oescape ["ak&" 1]] nil {:delayed {:canceled [["ak&" 0]["a&" 0]]
				:invoked [ [:vk_none] ["ak&" 0] ] }:held [ [:km "a held"] ["ak¬" 1]] }]
		;* a+m for Amphetamine
				[:m [[:vk_none]["am&" 1]] nil {:delayed{ :canceled [["am&" 0]["a&" 0]]
				:invoked [[:vk_none]["am&" 0]] } :held [[:km "a held"]] }]
		[:c [[:SPKR3] :!Oescape] ]		;• a+c for autocomplete now
		[:semicolon :!Osemicolon] ;•🔰  a+semicolon for elipse (to be used as suffix to trigger things)
		; [:comma :!TOleft_arrow] [:period :!TOright_arrow] ;• a+comma/period  for Active Screen Workspace Left/Right (via ⌃⌥←  in BTT)
	]}
;=========================== B MODE ==============================
	{:des " b-mode for b things" :rules [
		;+ b+o+...............................................................................................................................
			[:o [:km "Boldate Word"] [["b&" 1] ["bo&" 1]]] ;+ b+o² for Boldate Word
			[:c [:km "Boldate Clean"] [["b&" 1] ["bo&" 1]]] ;+ b+o+c for Boldate Clean
			[:a [:km "Boldate Clean Left"] [["b&" 1] ["bo&" 1]]] ;+ b+o+a for Boldate Clean Left
		;+ b+r+...............................................................................................................................
			[:a [:km "Activate Brave"] [["b&" 1] ["br&" 1]]] ;+ b+r+a for Activate Brave
			[:l [:km "Hover Evernote Bridgeston Log"] [["b&" 1] ["br&" 1]]] ;+ b+r+l for Hover Evernote Bridgeston Log
			[:i [:km "Hover Evernote Bridgeston Log"] [["b&" 1] ["br&" 1]]] ;+ b+r+i for Hover Evernote Bridgeston Log
			[:p [:km "Hover Evernote ⭐️ VIPs"] [["b&" 1] ["br&" 1]]] ;+ b+r+p for Hover Evernote ⭐️ VIPs
			; [:KeyDD [:km "km macro 2"] [["b&" 1] ["br&" 1]]] ;+ b+r+KeyDD for km macro 2
	:b& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* b+o for Boldate Things
				[:o [ [:vk_none] ["bo&" 1] ] nil {:delayed {:canceled [ ["bo&" 0]["b&" 0] ]
				:invoked [ :!Cb ["bo&" 0] ] }:held [ [:km "b held"] ["bo¬" 1]] }]
		;* b+r for...
			[:r [[:vk_none]["br&" 1]] nil {:delayed{:canceled [["br&" 0]["b&" 0]]
			:invoked [[:vk_none]["br&" 0]] } :held [[:vk_none]] }]
		[:w [:!Oleft_arrow :!OSright_arrow] ] ;• b+w for highlight word
		[:l [:!Ta :!TSe :!Sright_arrow] ] ;• b+l for highlight lio
	]}
;============================ C MODE =============================
	{:des "c-mode for c things" :rules [
		;+ c+o+...............................................................................................................................
			[:o [:km "Query Contacts"] [["c&" 1] ["co&" 1]]] ;+ c+o+o for Query Contacts
			[:n [:km "Connect Palette"] [["c&" 1] ["co&" 1]]] ;+ c+o+n for Connect Palette
			[:spacebar [:km "Query Contacts"] [["c&" 1] ["co&" 1]]] ;+ c+o+spacebar for Query Contacts
		;+ c+a+...............................................................................................................................
			[:a [:km "Capitalize Word"] [["c&" 1] ["ca&" 1]]] ;+ c+a+a for Capitalize Word
			[:w [:km "Capitalize Word"] [["c&" 1] ["ca&" 1]]] ;+ c+a+w for Capitalize Word
			[:p [:km "Capitalize Word"] [["c&" 1] ["ca&" 1]]] ;+ c+a+p for Capitalize Word
			[:spacebar [:km "Query Calendar"] [["c&" 1] ["ca&" 1]]] ;+ c+a+spacebar for Query Calendar
			[:s [:km "Capitalize Selection"] [["c&" 1] ["ca&" 1]]] ;+ c+a+s for Capitalize Selection
			[:l [:km "Go To Calendar"] [["c&" 1] ["ca&" 1]]] ;+ c+a+l for Go To Calendar
		;+ c+h+...............................................................................................................................
			[:h [:km "Check Spelling (via Alfred)"] [["c&" 1] ["ch&" 1]]] ;+ c+h+h for Check Spelling (via Alfred)
			[:s [:km "Check Spelling (via Alfred)"] [["c&" 1] ["ch&" 1]]] ;+ c+h+s for Check Spelling (via Alfred)
	:c& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* c+o for contacts
				[:o [ [:vk_none] ["co&" 1] ] nil {:delayed{:canceled [ ["co&" 0]["c&" 0] ]:invoked
				[ [:km "Activate Contact"] ["co&" 0] ] } :held [ [:km "held"] ["co¬" 1]] }]
		;* c+a for Calendar and capitalize...........................
				[:a [[:vk_none] ["ca&" 1]] nil {:delayed{:canceled [ ["ca&" 0]["c&" 0]]:invoked
				[[:km "Activate Calendar"] ["ca&" 0]] } :held [[:km "held"] ["ca¬" 1]] }]
		;* c+h for...
			[:h [[:vk_none]["ch&" 1]] nil {:delayed{:canceled [["ch&" 0]["c&" 0]]
			:invoked [[:km "Check Spelling (via Alfred)"]["ch&" 0]] } :held [[:vk_none]] }]
		;•jlik for ⌘ Cursor navigation..............................
			[:#Sj :!C#Sleft_arrow]
			[:#Sl :!C#Sright_arrow]
			[:#Si :!C#Sup_arrow]
			[:#Sk :!C#Sdown_arrow]
		[:d :!Cquote] ;• c+d for ⌘' (tag in evernote, )
		[:comma [:km "switch internal space left"] ] ;• c+, for switch internal space left
		[:period [:km "switch internal space right"] ] ;• c+. for switch internal space right
	]}
;============================ D MODE =============================
	{:des "d-mode for d things" :rules [
		;+ d+spacebar+..................................................................................................................
			[:spacebar [[:SPKR2][:km "Show Desktop Mgmt Palette"]] [["d&" 1] ["dspacebar&" 1]]] ;+ d+spacebar² for Show Desktop Mgmt Palette
			[:right_control [ [:km "Show Desktop Mgmt Palette"]] [["d&" 1] ["dright_control&" 1]]] ;+ d+right_control² for Show Desktop Mgmt Palette
			[:k [:escape [:km "Trigger Macro by Name"]] [["d&" 1] ["dspacebar&" 1]]] ;+ d+spacebar+k for Trigger Macro by Name
		;+ d+m+.............................................................................................................................
			[:m [:km "Minimize Window"] [["d&" 1] ["dm&" 1]]] ;+ d+m+m for Minimize Window
			[:s :!ST8 [["d&" 1] ["dm&" 1]]] ;+ d+m+s for Move Tab Left
			[:f :!ST9 [["d&" 1] ["dm&" 1]]] ;+ d+m+f for Move Tab Right
			[:comma [:km "Move Window Active Space left (delay)"] [["d&" 1] ["dm&" 1]]] ;+ d+m+comma for Move Window Active Space Left (delay)
			[:period [:km "Move Window Active Space Right (delay)"] [["d&" 1] ["dm&" 1]]] ;+ d+m+period for Move Window Active Space Right (delay)
	:d& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* d+spacebar for ⌘P...
				[:spacebar [[:SPKR3]:!Cp  ["dspacebar&" 1] ] nil {:delayed{:canceled [["dspacebar&" 0]["d&" 0]]
				:invoked [ [:vk_none] ["dspacebar&" 0] ] }:held [ [:km "Move Window Active Space Right (delay)"] ["dspacebar¬" 1] ] }]
		;* d+right_control for ⌘P... (for UHK splut spacebar )
				[:right_control [[:SPKR3] :!Cp ["dright_control&" 1]] nil {:delayed{:canceled [["dright_control&" 0]["d&" 0]]
				:invoked [ [:vk_none] ["dright_control&" 0] ] }:held [ [:km "Move Window Active Space Right (delay)"] ["dright_control¬" 1] ] }]
		;* d+escape for ⌘⌥⇧P (Global Macro Palette) or should everything just be prepended with the "`" or spacebar?...
				[:escape [ :!Cp ["descape&" 1] ] nil {:delayed
				{:canceled [ ["descape&" 0]["d&" 0] ] ; 'i' is said for everything
				:invoked [ [:km "blank"] ["descape&" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Move Window Active Space Right (delay)"] ["descape¬" 1]] }]
		;• Tab Manipulation....................................................
			[:s :!TStab] 							;   ; =   S for tab left (via ⇧⇥ with action set in App native or KM)
			[:f :!Ttab] 							   ; =   F   = ⇥
			[:a :!Copen_bracket] 			   ;    a for Back Page via ⌘[
			[:g :!Cclose_bracket] 		   ;    g for Forward Page via ⌘]
			[:w [:km "Item Up ©"]]		   ;    w for Item Up via ⌘]
			[:v [:km "Item Down ©"]]		   ;    v for Item Up via ⌘]

			[:c :!Cquote] 					   ;    c for ⌘'
		;* d+m for moving tab/window left/right.....................
				[:m [[:vk_none]["dm&" 1]] nil {:delayed {:canceled [["dm&" 0]["d&" 0]]
				:invoked [[:vk_none]["dm&" 0]] }  :held [[:km "Move Window Active Space Right (delay)"]["dm¬" 1]] } ]
			[:#Sj :!O#Sleft_arrow] ;*jlik for ⌥ navigation....................................................
			[:#Sl :!O#Sright_arrow]
			[:#Si :!O#Sup_arrow]
			[:#Sk :!O#Sdown_arrow]
		[:comma [:km "Switch Second Space Left"] ] ;• c+comma for Switch Second Space Left
		[:period [:km "Switch Second Space Right"] ] ;• c+period for Switch Second Space Right
		[:t [:!SCTd] ] ;• d+t for Dictate Text (via ⇧⌃⌘d)
	]}
;============================ F MODE ============================= ; !needs work
	{:des " f-mode for f things" :rules [
	:f& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
			;* f+⌘ and space for clicks
				[:spacebar :button1] [:right_control :button1] ;* f+spacebar OR right-control for click
 				[:right_gui :button2];* f+right_command for right click
 				[:left_gui :button3];* f+left_command fo (!Cbutton1 doesn't work as a <to> but can be recreated using button3)
			;* f+1/2/3/4/ focus Column
				[:1 [:km "Focus 1"]]
				[:2 [:km "Focus 2"]]
				[:3 [:km "Focus 3"]]
				[:4 [:km "Focus 4"]]
				[:caps_lock [:km "Focus Sidebar"] ]
				[:return_or_enter [[:SPKR3]:!STOn]] ;* Notification Center (via System Hotkey ⇧⌥⌃N)
			;* Focus Window
				[:q [[:SPKR2]:!Cgrave_accent_and_tilde]] [:e [[:SPKR2] :!SCgrave_accent_and_tilde]];• f+q/e for focus last/next window (via System Preferences)
				[:tab :!Ctab] ;• f+tab for ⌘⇥
				[:a :!!j]	; [:a [[:SPKR2]:!!j]] ;•left/right/up/ down via Slate
					[:d :!!l]	; [:d [[:SPKR2]:!!l]]
					[:w :!!i]	; [:w [[:SPKR2]:!!i]]
					[:s :!!k]	; [:s [[:SPKR2]:!!k]]
					[:x :!!x]	; [:x [[:SPKR2]:!!x]]
					[:b :!!b]	; [:b [[:SPKR2]:!!b]]
		[:n :fn] 	;• f+n for for function (to be used with qweasd moom search)
		[:comma [:km "Switch Third Space Left"] ] ;• c+, for Switch Third Space Left
		[:period [:km "Switch Third Space Right"] ] ;• c+. for Switch Third Space Right
	]}
;============================ G MODE ============================
	{:des "g-mode" :rules [
		;+ g+o+...............................................................................................................................
			[:o [:km "GoTo Palette"] [["g&" 1] ["go&" 1]]] ;+ g+o² fo GoTo Palette
			[:i [:km "GoTo OmniFocus Inbox"] [["g&" 1] ["go&" 1]]] ;+ g+o+i for GoTo OmniFocus Inbox
			[:t [:km "GoTo OmniFocus ™️ TOMORROW"] [["g&" 1] ["go&" 1]]] ;+ g+o+t for GoTo OmniFocus ™️ TOMORROW
			[:b [:km "Hover OmniFocus ⏸ Break"] [["g&" 1] ["go&" 1]]] ;+ g+o+b for Hover OmniFocus ⏸ Break
			[:d [:km "GoTo OmniFocus To Do"] [["g&" 1] ["go&" 1]]] ;+ g+o+d for GoTo OmniFocus To Do
			[:w [:km "GoTo Now@"] [["g&" 1] ["go&" 1]]] ;+ g+o+w for GoTo Now@
			[:m [:km "GoTo Gmail Inbox"] [["g&" 1] ["go&" 1]]] ;+ g+o+m for GoTo Gmail Inbox
			[:r [:km "Go To Recent OmniFocus Task"] [["g&" 1] ["go&" 1]]] ;+ g+o+r for Go To Recent OmniFocus Task
			; [:r [:km "Finder: Go To Just Press Record Voice Recordings"] [["g&" 1] ["go&" 1]]] ;+ g+o+r for Finder: Go To Just Press Record Voice Recordings
			[:a [:km "Finder: Go To Just Press Record Voice Recordings"] [["g&" 1] ["go&" 1]]] ;+ g+o+r for Finder: Go To Just Press Record Voice Recordings
		;+ g+m+...............................................................................................................................
			[:m [:km "Go To Messages"] [["g&" 1] ["gm&" 1]]] ;+ g+m² for Go To Messages
			[:l [:km "GoTo Gmail Inbox"] [["g&" 1] ["gm&" 1]]] ;+ g+m+l for km macro 2
		; + g+a+...............................................................................................................................
			; [:a [:km "Go To Window 1 (primary)"] [["g&" 1] ["ga&" 1]]] ;+ g+a+a for Go To Window 1 (primary)

	:g& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* g+o for blank (held if held)
				[:o [[:vk_none]["go&" 1]] nil {:delayed {:canceled [["go&" 0]["g&" 0]]
				:invoked [[:km "GoTo Palette"]["go&" 0]] }} ]
		;* g+m for Go To Messages
				[:m [[:vk_none]["gm&" 1]] nil {:delayed {:canceled [ ["gm&" 0]["g&" 0] ]
				:invoked [ [:km "Go To Messages"] ["gm&" 0] ] }:held [ [:km "g held"] ["gm¬" 1]] }]
		;* g+a for...
				; [:a [[:km "Go To Window 1 (primary)"]["ga&" 1]] nil {:delayed{:canceled [["ga&" 0]["g&" 0]]
				; :invoked [[:vk_none]["ga&" 0]] } }]
		;• Window Focusing
			[:1 [:!F1]] [:2 [:!F2]][:3 [:!F3]][:4 [:!F4]]
			[:q [:!Fq]] [:w [:!Fw]] [:e [:!Fe]] [:r [:!Fr]]
			[:a [:!Fa]] [:s [:!Fs]] [:d [:!Fd]][:f [:!Ff]]
			; [:a [:km "Go To Window 1 (primary)"]] ;• g+a for Go To Window 1 (primary))
			; [:s [:km "Go To Window 2 (secondary)"]] ;• g+s for Go To Window 2 (secondary)
		[:spacebar [:km "Click GUI Button"]] ;• g+spacebar for Click GUI Button
		[:right_control [:km "Click GUI Button"]] ;• g+right_control for Click GUI Button
		[:w [[:SPKR3] :!!tab]] ;• g+w for Click focus Window
	]}
;=========================== H MODE ==============================
	{:des " h-mode for h things" :rules [
		;+ h+o+...............................................................................................................................
			[:w [:km "Hover Evernote Now"] [["h&" 1] ["ho&" 1]]] ;+ h+o+w Hover Evernote Now
			[:a [:km "Hover Evernote Agenda"] [["h&" 1] ["ho&" 1]]] ;+ h+o+a Hover Evernote Agenda
			[:p [:km "Hover Evernote Past/Processed"] [["h&" 1] ["ho&" 1]]] ;+ h+o+p Hover Evernote Past/Processed
			[:z [:km "Hover Evernote Past/Processed"] [["h&" 1] ["ho&" 1]]] ;+ h+o+z Hover Evernote Past/Processed
			[:e [:km "Hover Recent Daily Journal Entry"] [["h&" 1] ["ho&" 1]]] ;+ h+o+e Hover Recent Daily Journal Entry
			[:d [:km "Hover Evernote To Do"] [["h&" 1] ["ho&" 1]]] ;+ h+o+d Hover Evernote To Do
			[:c [:km "Hover Evernote Communications/Messages"] [["h&" 1] ["ho&" 1]]] ;+ h+o+c Hover Evernote Communications/Messages
			[:i [:km "Hover OmniFocus Inbox"] [["h&" 1] ["ho&" 1]]] ;+ h+o+i Hover OmniFocus Inbox
			[:f [:km "Hover OmniFocus Focus Now"] [["h&" 1] ["ho&" 1]]] ;+ h+o+ for Hover OmniFocus Focus Now
			[:o [:km "Go To OmniFocus Agenda Folder"] [["h&" 1]["ho&" 1]] ] ;+ h+o+o for Go To OmniFocus Agenda Folder
   	:h& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
      	;* h+o for Hover Window
			[:o [ [:vk-none]  ["ho&" 1] ] nil {:delayed {:canceled [ ["ho&" 0] ]
			:invoked [ [:km "Hover Window"] ["ho&" 0] ] } :held ["say 'holding o'" ["ho¬" 1]] }]
		[:w [:!Oleft_arrow :!OSright_arrow] ] ;• h+w for highlight word
		[:l [:!Ta :!TSe :!Sright_arrow] ] ;• h+l for highlight lio
		]}
;============================ I MODE ==============================
	{:des "i-mode for new things" :rules [
		;+ i+t+.................................................................................................................................
			;+ i+t² for NA
			[:t [:km "Blank Test"] [["i&" 1] ["it&" 1]]]
	:i& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* i+t for Italicize
				[:t [ :!Ci ["it&" 1] ] nil {:delayed
				{:canceled [ ["it&" 0]["i&" 0] ] ; 'i' is said for everything
				:invoked [ [:vk "none"] ["it&" 0] ] } ; is triggered as delayed response even when holding
				:held [ :!Oleft_arrow :!OSright_arrow :!Ci ["it¬" 1]]
				}]

				[:e [:km "Insert Emoji"]] ;• i+e for Insert Emoji
		]}
;============================ J MODE =============================
	{:des "j-mode" :rules [
			;+ j+d+............................................................................................................................
				[:d [:km "Jump to Daily Journal"] [["j&" 1] ["jd&" 1]]] ;+ j+d+d for...
			;+ j+e+............................................................................................................................
				[:e [[:escape] [:km "Jump to Evernote"]] [["j&" 1] ["je&" 1]]] ;+ j+e+e for...
			;+ j+left_gui+..................................................................................................................
				[:left_gui :!CSslash [["j&" 1] ["jleft_gui&" 1]]] ;+ j+left_gui
			;+ j+right_gui+.......................................................................................................................
				[:right_gui :!Cf13 [["j&" 1] ["jright_gui&" 1]]] ;+ j+right_gui² for search bartender (via) ⌘F13)

	:j& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
			;* j+d for daily Journal
					[:d [[:vk_none]["jd&" 1]] nil {:delayed {:canceled[["jd&" 0]["j&" 0]]
					:invoked[[:km "Hover Recent Daily Journal Entry"]["jd&" 0]] } :held[[:km "held"]["jd¬" 1]] }]
			;* j+e for Jump to Evernote
					[:e [ [:SPKR2] :!COspacebar ["je&" 1] ] nil {:delayed {:canceled[["je&" 0]["j&" 0]]
					:invoked[:vk_none ["je&" 0]] } :held[:escape [:SPKR3] [:km "Query Evernote"]["je¬" 1]] }]
			;* j+left_gui for blank (held if held)
					[:left_gui [ [:SPKR3] :!FCTOSf1 ["jleft_gui&" 1] ] nil {:delayed {:canceled [ ["jleft_gui&" 0]["j&" 0] ]
					:invoked [ [vk_none] ["jleft_gui&" 0] ] }:held [ [:km "j held"] ["jleft_gui¬" 1]] }]
			;* j+right_gui for blank (held if held)
				[:right_gui [ [:SPKR3] :f13 ["jright_gui&" 1] ] nil {:delayed {:canceled [ ["jright_gui&" 0]["j&" 0] ]
				:invoked [ [vk_none] ["jright_gui&" 0] ] }:held [ [:km "j held"] ["jright_gui¬" 1]] }]
			;* j+o for blank (held if held)
				[:o [ [:SPKR3][:vk_none]["jo&" 1] ] nil {:delayed {:canceled [ ["jo&" 0]["j&" 0] ]
				:invoked [ [:km "Jump to OmniFocus Quick"] ["jo&" 0] ] }:held [ [:km "Jump to OmniFocus"]] }]

		; [:left_gui [[:SPKR3] :!FCTOSf1]] ;* (l)⌘ for focus menu bar (via System Shortcut)
		; [:right_gui [[:SPKR3] :f13]] ;* (r)⌘ for focus bartender (via System Shortcut)

		[:w [[:SPKR3] :!Ospacebar]] ;•Jump to Window via Context hotkey
		[:c [[:SPKR3][:alf "Search Chrome Bookmarks" "com.mdreizin.chrome.bookmarks"]]] ;• j+c for Jump to Chrome (alfred workflow)
		; [:o [:km "Jump to OmniFocus"]]
		[:s [:km "Jump to Stickies"]]
		[:period [:km "© Open Context Menu"]]
		[:spacebar [:km "Click GUI Button"]] ;* j+spacebar for Click GUI Button

		[:a [[:SPKR3] [:wait][:escp]]]
		[:r [:sendreturn]]
		[:q [:sendq]]
		; [:spacebar [[:SPKR3] [:sendspace]]]
		[:1 [[:SPKR3] [:sendesc]]]

		]}
;============================= K MODE =============================
	{:des "k-mode for new things" :rules [
		;+ k+r+...................................................................................................................................
			[:r [:km "Edit KE Config"] [["k&" 1] ["kr&" 1]]] ;+ k+r+r for Edit KE Config
			[:b [:km "Open Edit Karabiner Keys [Sublime Project]"] [["k&" 1] ["kr&" 1]]] ;+ k+r+b for Open Edit Karabiner Keys [Sublime Project]
			[:e [:km "Open Edit Karabiner Elements Configuration [Sublime Project]"] [["k&" 1] ["kr&" 1]]] ;+ k+r+e for Open Edit Karabiner Elements Configuration [Sublime Project]
			[:v [:km "Activate Karabiner EventViewer"] [["k&" 1] ["kr&" 1]]] ;+ k+r+v for Activate Karabiner EventViewer
		;+ k+e+...................................................................................................................................
			[:v [:km "Activate Karabiner EventViewer"] [["k&" 1] ["ke&" 1]]];+ k+e+v for Activate Karabiner EventViewer
		;+ k+p+..................................................................................................................................
			;+ k+p² for Add to Evernote End
			[:p [:km "Add to Evernote End"] [["k&" 1] ["kp&" 1]]]
			;+ k+p+spacebar for Query KeePass
			[:spacebar [:km "Query KeePass"] [["k&" 1] ["kp&" 1]]]
			;+ k+p+n for New Password
			[:n [:km "New Password"] [["k&" 1] ["kp&" 1]]]
		;+ k+c+..................................................................................................................................
			;+ k+c² for Search Key Clue KM (alf)
			[:c [:alf "Search Key Clue KM (alf)" "me.zhaocai.keylue"] [["k&" 1] ["kc&" 1]]]
		;+ k+o+...............................................................................................................................
			[:e [:km "Hyperlink Title Clean Right"] [["k&" 1] ["ko&" 1]]] ;+ k+o+e for Hyperlink Title Clean Right
		;+ k+m+...............................................................................................................................
			[:spacebar [:km "Jump to Macro By Name (Global)"] [["k&" 1] ["km&" 1]]] ;+ k+m+spaceber for Jump to Macro By Name (Global)
	:k& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
			;* k+r for Karabiner Stuff
      			[:r [[:vk_none]["kr&" 1]] nil {:delayed {:canceled [["kr&" 0]["k&" 0]] :invoked
				[[:km "Activate Karabiner Elements"]["kr&" 0]] } }]
			;* k+e for Karabiner Stuff
				[:e [[:vk_none]["ke&" 1]] nil {:delayed {:canceled [["ke&" 0]["k&" 0]] :invoked
				[[:km "Activate Karabiner Elements"]["ke&" 0]] } }]
			;* k+p for Activate KeePass
      			[:p [[:vk_none]["kp&" 1]] nil {:delayed {:canceled [["kp&" 0]["k&" 0]] :invoked
				[[:km "Activate KeePass"]["kp&" 0]] } }]
			;* k+c for Search Key Clue KC (alf)
      			[:c [[:alf "Search Key Clue KC (alf)" "me.zhaocai.keylue"]["kc&" 1]] nil {:delayed {:canceled [["kc&" 0]["k&" 0]] :invoked
				[[:vk_none]["kc&" 0]] } }]
			;* k+o for...
				[:o [[:vk_none]["ko&" 1]] nil {:delayed{:canceled [["ko&" 0]["k&" 0]]
				:invoked [[:vk_none]["ko&" 0]] } :held [[:vk_none]] }]
			;* k+m for...
				[:m [[:SPKR3][:vk_none]["km&" 1]] nil {:delayed{:canceled [["km&" 0]["k&" 0]]
				:invoked [[:vk_none]["ko&" 0]] } :held [[:vk_none]] }]
		; ;* k+m for...
		; 		[:m [[:km "Jump to Macro By Name (Global)"]["km&" 1]] nil {:delayed {:canceled [["km&" 0]["k&" 0]]
				; :invoked [[:vk_none]["km&" 0]] } :held [[:vk_none]] }]
		;• k+...................................................................................................................................
			[:spacebar [:km "Trigger Macro by Name"]] ;• k+spacebar for "Trigger Macro by Name"

	]}
; ============================ L MODE =============================
	{:des "L-mode for new things" :rules [

		;+ l+b+...................................................................................................................................
			;+ l+b² for...
			[:b [:km "GoTo Local Bitcoin Dashboard"] [["l&" 1] ["lb&" 1]]]
			;+ l+b+c for LBC Palette
			[:c [:km "LBC Palette"] [["l&" 1] ["lb&" 1]]]
			;+ l+b+d for Local Bitcoin Dashboard
			[:d [:km "Local Bitcoin Dashboard"] [["l&" 1] ["lb&" 1]]]
	:l& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* l+b for Local Bitcoin Stuf...............................
			[:b [[:vk_none]["lb&" 1]] nil {:delayed {:canceled [["lb&" 0]["l&" 0]]
			:invoked [[:km "blank"]["lb&" 0]] } :held [[:km "New Evernote Note"]["lb¬" 1]] }]
		;* l+s for..................................................
        		[:s [[:km "Clean Line Formatting"]["ls&" 1]] nil {:delayed{:canceled [["ls&" 0]["l&" 0]]
				} :held [:km "none"]  }]

	]}
;============================ M MODE ==============================
	{:des "m-mode for new things" :rules [
		;+ m+s+..............................................................................................................................
				[:s [:km "AVAILABLE"] [["m&" 1] ["ms&" 1]]] ;+ m+s+s for AVAILABE
				[:g [:km "Activate Messages"] [["m&" 1] ["ms&" 1]]] ;+ m+s+g for Activate Messages
		;+ m+p+.............................................................................................................................
				[:p [:km "AVAILABLE"] [["m&" 1] ["mp&" 1]]] ;+ m+p+p for AVAILABLE
		;+ m+spacebar+................................................................................................................
			[:spacebar [[:SPKR3] :!STOf11] [["m&" 1] ["mspacebar&" 1]]] ;+ m+spacebar² for km macro 1
			[:s [[:SPKR3] :!SOTf9] [["m&" 1] ["mspacebar&" 1]]] ;+ m+spacebar² for km macro 1
			[:x [:SPKR3] [["m&" 1] ["mspacebar&" 1]]] ;+ m+spacebar+x for km macro 2
		;+ m+o+.............................................................................................................................
			[:r [:km "Hover OmniFocus Morning Review"] [["m&" 1] ["mo&" 1]]] ;+ m+o+r for Hover OmniFocus Morning Review
			[:a [:km "Hover OmniFocus AGENDA"] [["m&" 1] ["mo&" 1]]] ;+ m+o+a for Hover OmniFocusGENDAda
			[:d [:km "Hover OmniFocus TO DO"] [["m&" 1] ["mo&" 1]]] ;+ m+o+d for Hover OmniFous TO DO
			[:w [:km "Hover OmniFocus NOW"] [["m&" 1] ["mo&" 1]]] ;+ m+o+w for Hover OmniFocus NOW
			[:t [:km "Hover OmniFocus TODAY"] [["m&" 1] ["mo&" 1]]] ;+ m+o+t for Hover OmniFocus TODAY
		;+ m+r+.............................................................................................................................
			[:r [:km "Center Morning Review"] [["m&" 1] ["mr&" 1]]] ;+ m+r+r for Center Morning Review

	:m& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* m+s for blank (held if held).....................
			[:s [ [:vk_none] ["ms&" 1] ] nil {:delayed {:canceled [ ["ms&" 0]["m&" 0] ]
			:invoked [ [:vk_none] ["ms&" 0] ] }:held [ [:km "m held"] ["ms¬" 1]] }]
		;* m+spacebar for Bartender Menubar Shortcuts
			[:spacebar [ :vk_none ["mspacebar&" 1] ] nil {:delayed {:canceled [ ["mspacebar&" 0]["m&" 0] ]
			:invoked [ [:SPKR3] :!STOf11 ["mspacebar&" 0] ] }:held [[:SPKR3] :!STOf10] }] ;! seem s to control volume on MBA function keys
		;* m+o for...
			[:o [[:vk_none]["mo&" 1]] nil {:delayed{:canceled [["mo&" 0]["m&" 0]]
			:invoked [[:vk_none]["mo&" 0]] } :held [[:vk_none]] }]
		;* m+r for...
			[:r [[:km "Hover OmniFocus Morning Review"]["mr&" 1]] nil {:delayed{:canceled [["mr&" 0]["m&" 0]]
			:invoked [[:vk_none]["mr&" 0]] } :held [[:km "Center Morning Review"]] }]
	;• m+......................................................................................................................................
		[:r [:km "Hover OmniFocus Morning Review"]] ;• m+r for Hover OmniFocus Morning Review
	]}
;============================= N MODE ============================
	{:des "n-mode for n things" :rules [
		;+ n+i+................................................................................................................................
			[:i [:km "Send to Omnifocus"] [["n&" 1] ["ni&" 1]]] ;+ n+i² for Send to OmniFocus
			; [:i [:km "Send to Omnifocus"] [["n&" 1] ["ni&" 1]]] ;+ n+i² for Send to OmniFocus
			[:c [:km "New Omnifocus Clipping"] [["n&" 1] ["ni&" 1]]] ;+ n+i+c for New Omnifocus Clipping
			[:w [:km "New OmniFocus Webshot"] [["n&" 1] ["ni&" 1]]] ;+ n+i+w for New OmniFocus Webshot
		;+ n+e+...............................................................................................................................
			[:e [:km "New QuickNote"] [["n&" 1] ["ne&" 1]]] ;+ n+e² for New QuickNote
			[:q [:km "New QuickNote"] [["n&" 1] ["ne&" 1]]] ;+ n+e+q for New QuickNote
			[:m [:km "New Email"] [["n&" 1] ["ne&" 1]]] ;+ n+e+m for New Email
		;+ n+c+...............................................................................................................................
			[:c "say 'double c'" [["n&" 1] ["nc&" 1]]] ;*this works well and blocks the n+c delayed trigger ;+ n+c+c for...
			[:o [:km "New Contact"] [["n&" 1] ["nc&" 1]]] ; !!! does not work, triggers "canceled" and "doubled o" ;+ n+c+o for New Contact
			[:a [:km "New Event"] [["n&" 1] ["nc&" 1]]] ;+ n+c+a New Calendar Event
		;+ n+m+...............................................................................................................................
			[:m [:vk_none] [["n&" 1] ["nm&" 1]]] ;+ n+m² for...
			[:s [:km "New Message (to self)"] [["n&" 1] ["nm&" 1]]] 			;+ n+m+s for New Message (to self)
		;+ n+t+................................................................................................................................
			[:t [:km "Quick Add Typinator Item"] [["n&" 1] ["nt&" 1]]];+ n+t+t for
			[:s [:km "New Typinator Item from Selection"] [["n&" 1] ["nt&" 1]]] ;+ n+t+s for New Typinator Item from Selection
			[:a  [[:km "New Tab"]] [["n&" 1] ["nt&" 1]]] ;+ n+t+a for New Tab
		;+ n+o+...............................................................................................................................
			; TESTING
				[:o ["say 'Double o'"["noDouble&" 1]] [["n&" 1]["no&" 1]] ] ;? says o, cancelled and double
				[:w ["say 'w'"["noCANCELLED&" 0]["noINVOKED&" 0]["noAlone&" 0]["noHeld&" 0] ["noAfterup&" 0]["noDouble&" 0]] [["n&" 1]["no&" 1]]] ;+ n+o+w for Activate OmniFocus New Window
				[:spacebar ["say 'space'"["noAlone&" 0]["noHeld&" 0] ["noAfterup&" 0]["noDouble&" 0]] [["n&" 1]["no&" 1]]] ;+ n+o+w for Activate OmniFocus New Window
			; [:o [[:SPKR3] :!STCo] [["n&" 1]["no&" 1]] ] ;+ n+o+o for omnifocus quick entry
			; [:w [:km "Activate OmniFocus New Window"] [["n&" 1] ["no&" 1]]] ;+ n+o+w for Activate OmniFocus New Window
		; [:n ["nmode" 1] {:afterup ["nmode" 0] :alone :n} ]

	:n& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––-
		;* n+i for New Omnifocus Quick Entry
			[:i [[:tink]:!CTSo["ni&" 1]] nil {:delayed{:canceled [:!CTSo["ni&" 0]["n&" 0]]
			:invoked [[:vk_none]["ni&" 0]] } :held [[:km "Send to Omnifocus"]] }]
		;  :rules [[:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
		;* n+o for...
        [:o ["say 'o'" ["no&" 1]] nil
        {
			:afterup [["noAfterup&" 1]["noHeld&" 0] "say 'afterup'"] ;? said when delayed second push, only turned off by non delayed now
			:alone [[:SPKR3]"say 'alone'"["noAlone&" 1]] ;? oAlone& tunrs on when you push o a second time but not during double
                :delayed {
                        :canceled ["say 'drop'"["no&" 0]["noCANCELLED&" 1]] ;?triggered when n+o+w
                        :invoked ["say 'invoked'" ["noINVOKED&" 1]["no&" 0]] }
                :held ["say 'held'"["noHeld&" 1]["no&" 1]] ;? says invoked and held
                }]
			[:x ["say 'off'"["noCANCELLED&" 0]["nmode" 0]["noAlone&" 0]["noHeld&" 0] ["noAfterup&" 0]["noDouble&" 0]]];• n+s for New Sticky

				; [:o ["say 'o'" ["no&" 1]] nil {:delayed {:canceled ["say 'drop'"["no&" 0]["n&" 0]] ;? tapping once  says "o" and "invoked", adding another or double tapping
				; :invoked ["say 'invoked'" ["no&" 0]] } :held ["say 'held'"[:vk_none]] }] ;?
				; [:o [[:vk_none]["no&" 1]] nil {:delayed{:canceled [["no&" 0]["n&" 0]]
				; :invoked [[:vk_none]["no&" 0]] } :held [[:vk_none]] }]
		;* n+e for New Evernote and Email
      		[:e [[:vk_none]["ne&" 1]] nil {:delayed{:canceled [["ne&" 0]["n&" 0]]
			:invoked [[:km "New QuickNote"]["ne&" 0]] } :held [[:km "New Evernote Note"]] }]
		;* n+c for New Event
    		[:c [[:vk_none]["nc&" 1]] nil {:delayed{:canceled [["nc&" 0]["n&" 0]]
			:invoked [[:km "New Event"]["nc&" 0]["n&" 0]] } :held ["say 'holding c'"] }]
		;* n+d for New 2Do (via hotkey)
    		[:d [[:SPKR3] :!STC2 ["nd&" 1]] nil {:delayed{:canceled [[:vk_none] ["nd&" 0]["n&" 0]]
			:invoked [[:vk_none]["nd&" ]["n&" 0]] } :held [:vk_none] }]
		;* n+m for New Message
			[:m [[:km "New Message"]["nm&" 1]] nil {:delayed{:canceled [["nm&" 0]["n&" 0]]
			:invoked [[:vk_none]["nm&" 0]] } :held [[:km "New Message (to self)"]] }]
		;* n+t for Typinator and tap stuff
			[:t [[:vk_none]["nt&" 1]] nil {:delayed{:canceled [["nt&" 0]["n&" 0]]
			:invoked [[:km "Quick Add Typinator Item"]["nt&" 0]] } :held [[:km "Test Blank"]] }]

		[:l [:km "Log Palette"]];• n+l for Log Palette
		[:p [:km "New Password"]];• n+p for New Password
		[:w [:km "New Window"]];• n+w for New Window
		[:s [:km "New Sticky"]];• n+s for New Sticky
	]}
;============================ O MODE ============================
{	:des "o-mode for..." :rules [
		;+ o+m+...............................................................................................................................
			[:f [:km "Activate OmniFocus New Window"] [["o&" 1] ["om&" 1]]] ;+ o+m+f for Activate OmniFocus New Window
			[:f [:km "Activate OmniFocus New Window"] [["o&" 1] ["om&" 1]]] ;+ o+m+f for Activate OmniFocus New Window
			[:b [:km "Hover OmniFocus ⏸ Break"] [["o&" 1] ["om&" 1]]] ;+ o+m+b for Hover OmniFocus ⏸ Break
			[:t [:km "GoTo OmniFocus ™️ TOMORROW"] [["o&" 1] ["om&" 1]]] ;+ o+m+t for GoTo OmniFocus ™️ TOMORROW

	:o& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* o+m for...
			[:m [[:vk_none]["om&" 1]] nil {:delayed{:canceled [["om&" 0]["o&" 0]]
				:invoked [[:vk_none]["om&" 0]] } :held [[:vk_none]] }]
		;* o+spacebar for Search OmniFocus Tasks via Alfred ..
			; [:spacebar [[:SPKR3][:alf "Search OmniFocus Tasks via Alfred" "net.rhydlewis.alfred.searchomnifocus"]["ospacebar&" 1]] nil {:delayed{:canceled [["ospacebar&" 0]["o&" 0]]
			; :invoked [[:vk_none]["ospacebar&" 0]] } :held [[:vk_none]] }]
	;• o+spacebar......................................................................................................................................
		[:spacebar [[:SPKR3][:alf "Search OmniFocus Tasks via Alfred" "net.rhydlewis.alfred.searchomnifocus"]]] ;• o+spacebar for Jump to OmniFocus
]}

;============================ P MODE =============================
	{:des "p-mode for..." :rules [ ; ;idea 💡 p mode should be used for a lot
		;+ p+r+..................................................................................................................................
			[:r [:km "Set Window Priority Palette"] [["p&" 1] ["pr&" 1]]] ;+ p+r+r for Set Window Priority Palette
			[:1 [:km "Set Window Priority 1 (primary)"] [["p&" 1] ["pr&" 1]]] ;+ p+r+1 for Set Window Priority 1 (primary)
			[:2 [:km "Set Window Priority 2 (secondary)"] [["p&" 1] ["pr&" 1]]] ;+ p+r+2 for Set Window Priority 2 (secondary)
			[:s [[:SPKR3][:btt "Save current Window Layout"]] [["p&" 1] ["pr&" 1]]] ;+ p+r+s for Save current Window Layout
			[:e [[:SPKR3][:btt "Restore last saved window layout"]] [["p&" 1] ["pr&" 1]]] ;+ p+r+s for Restore last saved window layout
			[:u [:km "Hover Evernote 🏒📰 Predators News Updates Game LOG"] [["p&" 1] ["pr&" 1]]] ;+ p+r+u for Hover Evernote 🏒📰 Predators News Updates Game LOG
		;+ p+h+.................................................................................................................................
			[:h [:vk_none] [["p&" 1]["ph&" 1]] ] ;+ p+h+h for...
			[:a [:km "Go To Sheet: Pharma"] [["p&" 1]["ph&" 1]]] ;+ p+h+a for Go To Sheet: Pharma
			[:x [:km "Go To Sheet: Xan Log"] [["p&" 1] ["ph&" 1]]] ;+ p+h+x for Go To Sheet: Xan Log
		;+ p+d+...............................................................................................................................
			[:b [:km "Hover Evernote Predators Dashboard"] [["p&" 1] ["pd&" 1]]] ;+ p+d+b for Hover Evernote Predators Dashboard
			[:a [:km "Hover Evernote Predators Dashboard"] [["p&" 1] ["pd&" 1]]] ;+ p+d+a for Hover Evernote Predators Dashboard
			[:u [:km "Hover Evernote 🏒📰 Predators News Updates Game LOG"] [["p&" 1] ["pd&" 1]]] ;+ p+d+u for Hover Evernote 🏒📰 Predators News Updates Game LOG

	:p& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* p+r for Prioritize window (held if held)
				[:r [ [:vk_none] ["pr&" 1] ] nil {:delayed {:canceled [ ["pr&" 0]["p&" 0] ]
				:invoked [[:km "Set Window Priority Palette"]["pr&" 0]] } :held [[:km "Show Window Priority Info"]] } ]
		;* p+h for pharma stuff
				[:h [[:vk_none]["ph&" 1]] nil {:delayed{ :canceled [["ph&" 0]["p&" 0]]
				:invoked [[:km "Go To Sheet: Pharma"]["ph&" 0]] } :held [[:km "p held"]] } ]
		;* p+d for...
				[:d [[:vk_none]["pd&" 1]] nil {:delayed{:canceled [["pd&" 0]["p&" 0]]
				:invoked [[:vk_none]["pd&" 0]] } :held [[:vk_none]] }]

	[:spacebar [[:SPKR3]:!!p]] ;• p+spacebar for search 1password...

	]}
;============================ R MODE ============================
	{:des "r-mode for remote things" :rules [
		;+ r+m+.............................................................................................................................
			[:m [:km "-Remote Modes Palette"] [["r&" 1] ["rm&" 1]]] ;+ r+m² for. Remote Modes Palette
			[:y [:km "QuickTime Remote"] [["r&" 1] ["rm&" 1]]] ;+ r+m+q for QuickTime Remote
			[:y [:km "YouTube Remote"] [["r&" 1] ["rm&" 1]]] ;+ r+m+y for YouTube Remote
			[:x [:km "Deactivate Remote"] [["r&" 1] ["rm&" 1]]] ;+ r+m+x for Deactivate Remote

		;+ r+o+...............................................................................................................................
			[:a [:km "Go to Roam Greenhouse Lou"] [["r&" 1] ["ro&" 1]]] ;+ r+o+a for Go to Roam Greenhouse Lou
			[:4 [:km "Go to Roam Greenhouse C4"] [["r&" 1] ["ro&" 1]]] ;+ r+o+4 for Go to Roam Greenhouse C4
	:r& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		; TODO Scrolling [:j {:mkey {:vwheel 100}}] [:k {:mkey {:vwheel -100}}] https://github.com/yqrashawn/GokuRakuJoudo/issues/18
		;* r+m for Media Remote
				[:m [ [:vk_none] ["rm&" 1] ] nil {:delayed {:canceled [ ["rm&" 0]["r&" 0] ] ; 'i' is said for everything
				:invoked [ [:km "Media Remote"] ["rm&" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Deactivate Remote"] ["rm¬" 1]]
				}]
		;* r+o for Roam stuff
				[:o [ [:km "Go to Roam Greenhouse (Lou's)"] ["ro&" 1] ] nil {:delayed {:canceled [ ["ro&" 0]["r&" 0] ] ; 'i' is said for everything
				:invoked [ [:km "Go to Roam Greenhouse Lou"] ["ro&" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Deactivate Remote"] ["ro¬" 1]]
				}]
		;* Transport Controls
      [:spacebar :!TOCspacebar] ;*spacebar for pause via ⌃⌥⌘Space ;*j/l/i/k for remote transport controls
      [:right_control :!TOCspacebar] ;! thought I might need to fix for right control
			[:j :!TOCleft_arrow]
			[:l :!TOCright_arrow]
			[:i :!TOCup_arrow]
			[:k :!TOCdown_arrow]
			[:a :!TOCleft_arrow]
			[:d :!TOCright_arrow]
			[:w :!TOCup_arrow]
			[:s :!TOCdown_arrow]
			[:comma :!TOCcomma]   ;*comma/dot for speed up and down via ⌃⌥⌘,/.
			[:period :!TOCperiod]
			[:semicolon :!TOCsemicolon] ;*semicolon/quote for frame forward/backwoord ⌃⌥⌘;/'
			[:p :!TOCp] ;*n/p for next/previous video⌃⌥⌘;/'
			[:n :!TOCn]
			[:f :!TOCf] ;*f for fullOCreen via ⌃⌥⌘f
			[:tab [:km "Screenshot Timestamp"]] ;* r+tab for tab for Screenshot Timeestamp
			[:p [:km "Screenshot Timestamp"]] ;*tab for Screenshot Timeestamp
			[:right_gui [:km "Screenshot Timestamp"]] ;*tab for Screenshot Timeestamp
    ;* Remote Palette
				[:return_or_enter [:km "- Remote Modes Palette"]] ;*return for remote palette
				[:m [:km "Media Remote"]] 		;*r for YouTube Remote
				[:y [:km "YouTube Remote"]] 		;*y for YouTube Remote
				[:q [:km "QuickTime Remote"]] 		;*q for QuickTime Remote
				[:x [:km "Deactivate Remote"]] 		;*q for Deactivate Remote
	]}
;============================= S Mode =============================
	{:des "s-mode for s things" :rules [
		;+ s+c+...............................................................................................................................
			; [:KeyCC [:km "km macro 1"] [["s&" 1] ["sc&" 1]]] ;+ s+c+KeyCC for km macro 1
			; [:KeyDD [:km "km macro 2"] [["s&" 1] ["sc&" 1]]] ;+ s+c+KeyDD for km macro 2
		;+ s+right_shift+................................................................................................................. what?
			[:right_shift [:km "Uppercase Selection"] [["s&" 1] ["sright_shift&" 1]]] ;+ s+right_shift² for Uppercase Selection
			[:9 [:km "Enclose Selection with Parenthesis"] [["s&" 1] ["sright_shift&" 1]]] ;+ s+right_shift+9 for Enclose Selection with Parenthesis
			[:quote [:km "Enclose Selection with Double Quotes"] [["s&" 1] ["sright_shift&" 1]]] ;+ s+right_shift+quote for Enclose Selection with Double Quotes
			[:open_bracket [:km "Enclose Selection with Curly Brackets"] [["s&" 1] ["sright_shift&" 1]]] ;+ s+right_shift+open_bracket for Enclose Selection with Curly Brackets
	:s& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* s+KeyBB for...
			; [:KeyBB [[:vk_none]["sKeyBB&" 1]] nil {:delayed{:canceled [["sKeyBB&" 0]["s&" 0]]
			; :invoked [[:vk_none]["sKeyBB&" 0]] } :held [[:vk_none]] }]

		;* s+right_shift for transform selection case
				[:right_shift [ [:vk_none] ["sright_shift&" 1] ] nil {:delayed {:canceled [ ["sright_shift&" 0]["s&" 0] ]
				:invoked [ [:km "Capitalize Selection"] ["sright_shift&" 0] ] } :held [ [:km "Uppercase Selection"] ["sright_shift¬" 1]] }]
		;* s+quote for enclose in single quotes
				[:quote [[:SPKR3][:km "Enclose Selection with Single Quotes"]["squote&" 1]] nil {:delayed{:canceled [["squote&" 0]["s&" 0]]
				:invoked [[:vk_none]["squote&" 0]] } :held [[:vk_none]] }]
		;* s+open_bracket for Enclose Selection with Square Brackets
				[:open_bracket [[:km "Enclose Selection with Square Brackets"]["sopen_bracket&" 1]] nil {:delayed{:canceled [["sopen_bracket&" 0]["s&" 0]]
				:invoked [[:vk_none]["sopen_bracket&" 0]] } :held [[:vk_none]] }]
		;*jlik for  selection
				[:j :!SOleft_arrow] [:l :!SOright_arrow] [:i :!SOup_arrow] [:k :!SOdown_arrow]

			; TODO Scrolling [:j {:mkey {:vwheel 100}}] [:k {:mkey {:vwheel -100}}] https://github.com/yqrashawn/GokuRakuJoudo/issues/18 ;? https://github.com/yqrashawn/GokuRakuJoudo/blob/4e307c3ca7ef7f0dfb59ad8dd5112172946d7a31/test/karabiner_configurator/tos_test.clj
			;? {:mkey {:x -123 :y 123 :hwheel 13 :vwheel 1 :speed 2.0}}
		;*alfed for scroll mouse now
			[:a {:mkey {:hwheel 5 :speed 5}}]
			[:f {:mkey {:hwheel -5 :speed 5}}]
			[:e {:mkey {:vwheel -5 :speed 5}}]
			[:d {:mkey {:vwheel 5 :speed 5}}]
			; [:f {:mkey { :hwheel 13 :vwheel 25 :speed .1}}]

			[:t :!STCs] ;* t for Speake Text via system hot key
			[:c [:km "Speak Clipboard"]] ;* c for Speak Clipboard

	]}
;============================ T MODE ============================
	{	:des "t-mode for t things" :rules [
		;+ t+b+...............................................................................................................................
			[:b [:km "• Table Functions Palette"] [["t&" 1] ["tb&" 1]]] ;+ t+b² for • Table Functions Palette
			[:l [:km "• Table Functions Palette"] [["t&" 1] ["tb&" 1]]] ;+ t+b+l for • Table Functions Palette
		;+ t+a+...............................................................................................................................
			[:a [:km "km macro 1"] [["t&" 1] ["ta&" 1]]] ;+ t+a+a for km macro 1
			[:b [:km "km macro 2"] [["t&" 1] ["ta&" 1]]] ;+ t+a+b for km macro 2
	:t& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* t+a for...
			[:a [[:km "Tab Left"]["ta&" 1]] nil {:delayed{:canceled [["ta&" 0]["t&" 0]]
			:invoked [[:km "New Tab"]["ta&" 0]] } :held [[:vk_none]] }]
		;* t+b for blank (held if held)
			[:b [[:vk_none]["tb&" 1]] nil {:delayed{:canceled [["tb&" 0]["t&" 0]]
			:invoked [[:km "• Table Functions Palette"]["tb&" 0]] } :held [[:km "t held"]] }]
		[:m [:km "Tab Merge"] ] ;• t+w for Tab Merge
		[:n [:km "Tab New"] ] ;• t+n for Tab New
		[:w [:km "Tab To Window"] ] ;• t+w for Tab To Window
		]}
;============================ U MODE ============================
	{:des "u-mode for..." :rules [
		;+ u+c+...............................................................................................................................
			[:c [:km "Capitalize Word"] [["u&" 1] ["uc&" 1]]] ;+ u+c²
			[:s [:km "Uppercase Selection"] [["u&" 1] ["uc&" 1]]] ;+ u+c+s for Uppercase Selection
			[:w [:km "Uppercase Word"] [["u&" 1] ["uc&" 1]]] ;+ u+c+w for Uppercase Word
			[:p [:km "Uppercase Word"] [["u&" 1] ["uc&" 1]]] ;+ u+c+p for Uppercase Word
		;+ u+p+..............................................................................................................................
			[:c [:km "Uppercase Word"] [["u&" 1] ["up&" 1]]] ;+ u+p+c for Uppercase Word
	:u& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* u+c for uppercase word
			[:c [ [:vk_none] ["uc&" 1] ] nil {:delayed {:canceled [ ["uc&" 0]["u&" 0] ]
			:invoked [ [:km "Uppercase Word"] ["uc&" 0] ] }:held [ [:km "u held"] ["uc¬" 1]] }]
		;* u+p for...
			[:p [[:vk_none]["up&" 1]] nil {:delayed{:canceled [["up&" 0]["u&" 0]]
			:invoked [[:vk_none]["up&" 0]] } :held [[:vk_none]] }]
		[:s [:km "New Sticky"]] ;• u+s for New Sticky
	]}
;============================ V MODE ============================
{	:des "v-mode for..." :rules [
		;+ v+i+...............................................................................................................................
			[:p [:km "Hover Evernote ⭐️ VIPs"] [["v&" 1] ["vi&" 1]]] ;+ v+i+p for Hover Evernote ⭐️ VIPs
			; [:KeyDD [:km "km macro 2"] [["v&" 1] ["vi&" 1]]] ;+ v+i+KeyDD for km macro 2
	:v& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* v+i for...
			[:i [[:vk_none]["vi&" 1]] nil {:delayed{:canceled [["vi&" 0]["v&" 0]]
			:invoked [[:vk_none]["vi&" 0]] } :held [[:vk_none]] }]
		; [:KeyFF [:ToKey]] ;• v+KeyFF for ToKey
]}

;============================ W MODE =============================
	{:des "w-mode" :rules [
		;+ w+spacebar...................................................................................................
			[:spacebar [[:SPKR2]:!!f14] [["w&" 1]["wspacebar&" 1]] ] ;+ w+spacebar²  for Moom
			; [:right_control [[:SPKR2]:escape [:btt "Expose"]] [["w&" 1]["wright_control&" 1]] ];+ w+R⌃²  for Expose via BTT Hotkey
			; [:e [ :escape  [:btt "Expose"] ] [["w&" 1] ["wspacebar&" 1]] ] ;+ w+e  for Expose via BTT Hotkey
			; [:d [ :escape [:SPKR3] [:btt "Show Desktop"] ] [["w&" 1] ["wspacebar&" 1]]] ;+ w+spacebar+d for Show Desktop (via BTT)
			; [:spacebar :j [["w&" 1] ["wspacebar&" 1]] ]
			;+ w+spacebar+n for Show Notifcation Center (via BTT)
			[:n [ [:btt "Show Notification Center"] ] [["w&" 1] ["wspacebar&" 1]]]
			;+ w+spacebar+a for Mission Control: Application Windows
			[:a [:km "Mission Control: Application Windows"] [["w&" 1] ["wspacebar&" 1]]]
		;+ w+left_command+.................................................................................................................
			[:left_command [:!!SCTOf4] [["w&" 1] ["wleft_command&" 1]] ] ;+ w+left_command²  for Expose via BTT Hotkey
		;+ w+l+.................................................................................................................
			[:l [[:SPKR3][:btt "Restore last saved window layout"]] [["w&" 1] ["wl&" 1]] ] ;+ w+l+l  for Restore window layout via BTT Hotkey
			[:r [[:SPKR3][:btt "Restore Saved Window Layout"]] [["w&" 1] ["wl&" 1]] ] ;+ w+l+r for Restore Saved Window Layout via BTT Hotkey
			[:s [[:SPKR3][:btt "Save Current Window Layout"]] [["w&" 1] ["wl&" 1]] ] ;+ w+l+s for Save Current Window Layout via BTT Hotkey

	:w& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
			;* w+spacebar for Moom via ⌃⌥⇧⌘f14 hotkey
				[:spacebar [[:btt "Expose"] [:SPKR3]["wspacebar&" 1]] nil {:delayed{:canceled [["wspacebar&" 0]["w&" 0]]
				:invoked [[:vk_none]["wspacebar&" 0]] }}]
			;! w+spacebar for Moom via ⌃⌥⇧⌘f14 hotkey (old)
				; [:spacebar [:!!f14 [:SPKR3]["wspacebar&" 1]] nil {:delayed{:canceled [["wspacebar&" 0]["w&" 0]]
				; :invoked [[:vk_none]["wspacebar&" 0]] }}]
			;* w+right_control for Jump to window via context hot key
						[:right_control [[:btt "Expose"] [:SPKR3]["wright_control&" 1]] nil {:delayed{:canceled [["wright_control&" 0]["w&" 0]]
						:invoked ["wright_control&" 0] }:held [:km "Mission Control: Application Windows"] }]
			;! w+right_control for Jump to window via context hot key (old)
						; [:right_control [:!!f14 [:SPKR3]["wright_control&" 1]] nil {:delayed{:canceled [["wright_control&" 0]["w&" 0]]
						; :invoked ["wright_control&" 0] }:held [:km "Mission Control: Application Windows"] }]

			;* w+left_command for Expose (via BTT hotkey ⌃⌥⇧⌘f4)
				[:left_command [[:btt "Expose"]  ["wleft_command&" 1]] nil {:delayed
				{:canceled [["wleft_command&" 0]["w&" 0]] ; 'i' is said for everything
				:invoked [[:vk_none] ["wleft_command&" 0]] } ; is triggered as delayed response even when holding
				:held [  [:km "Mission Control: Application Windows"] ["wleft_command¬" 1]] }]
			;* w+l+ for Window layout via BTT
				[:l [ [:vk_none] ["wl&" 1] ] nil {:delayed {:canceled [ ["wl&" 0]["w&" 0] ]
				:invoked [ [:vk_none] ["wl&" 0]] }:held [ [:SPKR3] [:btt "Save current window layout"]] }]

	;• w+––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
				[:a [[:SPKR3] :!STOcomma]] ;• w+a for Switch Active Workspace Left (via System Hotkeys)
				[:spacebar [[:SPKR3] [:btt "Expose"]] ] ;• w+a for Switch Active Workspace Left (via System Hotkeys)
				[:d [[:SPKR3] :!STOperiod]] ;• w+d for Switch Active Workspace Right (via System Hotkeys)
				[:caps_lock [[:SPKR3] [:btt "Move Window Space Left"] ] ] ;• w+capslock Move Window Space Left
				[:f [[:SPKR3] [:btt "Move Window Space Right"] ] ] ;• w+f  Move Window Space Right
				[:comma [:km "Switch All Workspaces Left"]] ;• w+comma for Switch All Workspaces Left
				[:period [:km "Switch All Workspaces Right"]];• w+period for Switch All Workspaces Right
				[:caps_lock [ [:SPKR3] [:btt "Move Window Space Left"] ] ] ;• w+caps_lock/f for Move Window Space Left/Right (via BTT script)
				[:f [[:SPKR3] [:btt "Move Window Space Right"] ] ] ;• w+f for  Move Window Space Right
				[:1 [ [:SPKR3] [:btt "Switch to Workspace 1"]]] ;• w+1 for Switch to Workspace 1 (via BTT script)
				[:2 [ [:SPKR3] [:btt "Switch to Workspace 2"]]] ;• w+2 for Switch to Workspace 2 (via BTT script)
				[:3 [ [:SPKR3] [:btt "Switch to Workspace 3"]]] ;• w+3 for Switch to Workspace 3 (via BTT script)
				[:4 [ [:SPKR3] [:btt "Switch to Workspace 4"]]] ;• w+4 for Switch to Workspace 4 (via BTT script)
	]}
;============================ X MODE ============================
		{	:des "x-mode for..." :rules [
		:x& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
				[:p :!Tdelete_or_backspace ] 		;* x+p for clear notification
				]}
;============================ Z MODE =============================
	{	:des "z-mode for..." :rules [
		;+ z+b+...............................................................................................................................
			[:b [:km "km macro 1"] [["z&" 1] ["zb&" 1]]] ;+ z+b² for km macro 1
			[:i :apple_display_brightness_increment [["z&" 1] ["zb&" 1]]] ;+ z+b+i
			[:k :apple_display_brightness_decrement [["z&" 1] ["zb&" 1]]] ;+ z+b+i
	:z& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* z+b for brightness (held if held)
				[:b [ [:vk_none] ["zb&" 1] ] nil {:delayed {:canceled [ ["zb&" 0]["z&" 0] ]
				:invoked [ [vk_none] ["zb&" 0] ] }:held [ [:km "z held"] ["zb¬" 1]] }]

		;*
		[:spacebar :play_or_pause] 		;• z+spacebar for system pause
		[:right_control :play_or_pause] 		;• z+spacebar for system pause
		[:j :rewind] ;• z+j for rewind
		[:l :fastforward]
		[:i :volume_increment]
		[:k :volume_decrement]
	]}
;========================= PERIOD MODE ===========================
	{:des " period-mode for typinator and autocomplete":rules [
		;+ period+o...........................................................................................................................
				[:o "say 'double o'" [["period&" 1] ["periodo&" 1]]] ;+ period+o² for testings
				[:d "say 'three key...chord'" [["period&" 1] ["periodo&" 1]]]

    :period& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
			[:spacebar [[:SPKR3] :!SCTt] ] ;• period+spacebar for Typinator Quick Search (via ⌃⇧⌘T hotkey)
			[:left_shift [[:SPKR3] :!STperiod] ] ;• period+spacebar for Typinator Suggest Abbreviation (via ⌃⇧+. hotkey)
	]}
;========================== RETURN MODE ==========================
	{	:des "return-mode for..." :rules [
		:return& ;* –––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		[:delete_or_backspace :!Tdelete_or_backspace] ;• return+delete for dismiss notification (via ⌃↩) 💡  could also just use
		[:spacebar :!COSTreturn_or_enter] ;• return+delete for dismiss notification (via ⌃↩) 💡  could also just use

	]}
;============================ QUOTE MODE ============================
{	:des "quote-mode for..." :rules [
		; + quote+s+...............................................................................................................................
			[:s [:km "Enclose Selection with Double Quotes"] [["quote&" 1] ["quotes&" 1]]] ;+ quote+s+s for Encluse Selection with Double Quotes
			; [:KeyDD [:km "km macro 2"] [["quote&" 1] ["quoteKeyBB&" 1]]] ;+ quote+KeyBB+KeyDD for km macro 2
		;+ quote+w+...............................................................................................................................
			[:w [:km "Wrap Word in Double Quotes"] [["quote&" 1] ["quotew&" 1]]] ;+ quote+w+w for Wrap Word in Single Quotes

	:quote& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* quote+s for Enclose Selection with Single Quotes...
			[:s [[:vk_none]["quotes&" 1]] nil {:delayed{:canceled [["quotes&" 0]["quote&" 0]]
			:invoked [[:km "Enclose Selection with Single Quotes"]["quotes&" 0]] } :held [[:vk_none]] }]
		;* quote+w for...
			[:w [[:vk_none]["quotew&" 1]] nil {:delayed{:canceled [["quotew&" 0]["quote&" 0]]
				:invoked [[:km "Wrap Word in Single Quotes"]["quotew&" 0]] } :held [[:vk_none]] }]

		; [:s [:ToKey]] ;• quote+s for ToKey hello
]}
;======================== SEMICOLON MODE  =========================
;! GOING TO SET UP LIKEHYPER KEY for FUNCTIO
;============================ MORE  =============================
;============================ SLASH MODE ============================
{	:des "slash-mode for..." :rules [
		;; ;+ slash+spacebar+...............................................................................................................................
			;; [:spacebar :!CSslash [["slash&" 1] ["slashspacebar&" 1]]] ;+ slash+spacebar+spacebar for Focus help menu via ⇧⌘/
	:slash& ;* ––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––––
		;* slash+spacebar for...
			[:spacebar [[:SPKR3] :!SCslash ["slashspacebar&" 1]] nil {:delayed{:canceled [["slashspacebar&" 0]["slash&" 0]]
			:invoked [ :vk_none ["slashspacebar&" 0]] } :held [[:vk_none]] }]  ;• slash+spacebar for Focus Menu via ⌥⎋ (System Preferences)

	]}

	;* E mode for...
		{:des "e-mode for e things"
		:rules [:e& [:c [:km "Try Current Macro"]]]}

		;* Chunk Mode
     {:des   "chunkwm mode"
				:rules [
					[:!CS4 ["/usr/local/bin/chunkc border::clear" :!CS4]]
					[:!CS6 ["/usr/local/bin/chunkc border::clear" :!CS3]]
					[:!COSf "/usr/local/bin/chunkc tiling::window --toggle native-fullscreen"]
					:chunkwm-insert-mode
							[:spacebar "/usr/local/bin/chunkc tiling::window --use-insertion-point cancel"]
							[:j "/usr/local/bin/chunkc tiling::window --use-insertion-point west"]
							[:k "/usr/local/bin/chunkc tiling::window --use-insertion-point south"]
							[:i "/usr/local/bin/chunkc tiling::window --use-insertion-point north"]
							[:l "/usr/local/bin/chunkc tiling::window --use-insertion-point east"]
				:chunkwm-move-mode 	;; move windows
							[:j "/usr/local/bin/chunkc tiling::window --warp west"]
							[:k "/usr/local/bin/chunkc tiling::window --warp south"]
							[:i "/usr/local/bin/chunkc tiling::window --warp north"]
							[:l "/usr/local/bin/chunkc tiling::window --warp east"]
				:chunkwm-scale-mode ;; scale windows
							[:j "~/local/bin/chunkwm-resize left"]
							[:k "~/local/bin/chunkwm-resize down"]
							[:i "~/local/bin/chunkwm-resize up"]
							[:l "~/local/bin/chunkwm-resize right"]
							[:spacebar "/usr/local/bin/chunkc tiling::desktop --equalize"]; equalize size of windows
					; :tab-mode
							[:return_or_enter "~/local/bin/chunkwm-change-mode"]
							[:grave_accent_and_tilde "/usr/local/bin/brew services restart chunkwm"]
								[:j "/usr/local/bin/chunkc tiling::window --focus west"]
								[:k "/usr/local/bin/chunkc tiling::window --focus south"]
								[:i "/usr/local/bin/chunkc tiling::window --focus north"]
								[:l "/usr/local/bin/chunkc tiling::window --focus east"]
								[:n "/usr/local/bin/chunkc tiling::window --focus next"]
								[:p "/usr/local/bin/chunkc tiling::window --focus prev"]
							;; change gap setting, reload chunkwmrc
								[:backslash "~/local/bin/chunkwm-gaps 10 10 5 5 7.5"]
								[:delete_or_backspace "~/local/bin/chunkwm-gaps 0 0 0 0 0"]
					;; chunkwm workspace
						;; [:1 "/usr/local/bin/chunkc tiling::desktop --focus $(( $(/usr/local/bin/chunkc tiling::query --desktop id) == 1 ? $(/usr/local/bin/chunkc get _last_active_desktop) : 1 ))"]
						;; [:2 "/usr/local/bin/chunkc tiling::desktop --focus $(( $(/usr/local/bin/chunkc tiling::query --desktop id) == 2 ? $(/usr/local/bin/chunkc get _last_active_desktop) : 2 ))"]
						;; [:3 "/usr/local/bin/chunkc tiling::desktop --focus $(( $(/usr/local/bin/chunkc tiling::query --desktop id) == 3 ? $(/usr/local/bin/chunkc get _last_active_desktop) : 3 ))"]
						;; [:4 "/usr/local/bin/chunkc tiling::desktop --focus $(( $(/usr/local/bin/chunkc tiling::query --desktop id) == 4 ? $(/usr/local/bin/chunkc get _last_active_desktop) : 4 ))"]
					;; rotate windows clockwise and anticlockwise
				[:semicolon "/usr/local/bin/chunkc tiling::window -M next"]
				[:r "/usr/local/bin/chunkc tiling::desktop --rotate 90"]
					[:!Sr "/usr/local/bin/chunkc tiling::desktop --rotate 270"]
					;; rotate on x and y axis
					[:y "/usr/local/bin/chunkc tiling::desktop --mirror vertical"]
					[:!Sy "/usr/local/bin/chunkc tiling::desktop --mirror horizontal"]
					[:spacebar "/usr/local/bin/chunkc tiling::window --toggle fullscreen"]
					[:a "/usr/local/bin/chunkc tiling::window --toggle float"]
					[:b "/usr/local/bin/chunkc tiling::desktop --layout bsp"]
					[:m "/usr/local/bin/chunkc tiling::desktop --layout monocle"]
					[:0 "/usr/local/bin/chunkc tiling::desktop --layout float"]
					[:x "/usr/local/bin/chunkc tiling::window --close"]

					[:delete_or_backspace "/usr/local/bin/chunkc tiling::window --close"]
					[:open_bracket "/usr/local/bin/chunkc tiling::window --send-to-monitor prev"]
					[:close_bracket "/usr/local/bin/chunkc tiling::window --send-to-monitor next"]]}
]
:simlayer-threshold 210 ;def = 50 ;! when set to 1000 there is very noticable delay and 50 isnt enough time, 300 too much
	;! seems to create obsene delay on  on key up
;*==================== DEVICES and INPUT SOURCES ====================
		:devices {
				:macbook-internal [{:product_id 631 :vendor_id 1452}]
				:uhk-keyboard [{:product_id 24866 :vendor_id 7504}]
			}
		:applications {
			:Chromes      ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]
			:Terminals     ["^com\\.apple\\.Terminal$", "^com\\.googlecode\\.iterm2$", "^co\\.zeit\\.hyperterm$", "^co\\.zeit\\.hyper$", "^io\\.alacritty$", "^net\\.kovidgoyal\\.kitty$"]
			:Finder           ["^com\\.apple\\.finder$"]
			:Debuggers   ["^org\\.mozilla\\.firefox$", "^org\\.mozilla\\.firefoxdeveloperedition$", "^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$", "^com\\.apple\\.Safari$", "^com\\.microsoft\\.VSCode$"]
			:Browsers      ["^org\\.mozilla\\.firefox$", "^org\\.mozilla\\.firefoxdeveloperedition$", "^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$", "^com\\.apple\\.Safari$"]
			}
		:input-sources {
	 		:squirrel {:input_mode_id   "com.googlecode.rimeime.inputmethod.Squirrel"
						:input_source_id "com.googlecode.rimeime.inputmethod.Squirrel.Rime"
						:language        "zh-Hans"}
			:us {:input_mode_id   ""
					:input_source_id "com.apple.keylayout.US"
					:language        "en"}
			}
;*============================ END ===============================
}
